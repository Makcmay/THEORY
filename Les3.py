import numpy as np

z = np.array([167, 181, 174, 178, 175, 164, 182, 178, 193, 166, 154, 170, 177])

x = np.std(z)  #стандартное отклонение

print(x)

y = np.var(z) # смещеная дисперсия

print(y)

print(np.sqrt(y)) #извлекаем корень из дисперсии, получаем отклонение стандартное

p = np.std(z, ddof=1) #несмещенное стандартное отклонение

print(p)

m = np.var(z, ddof=1) #несмещенная дисперсия
print(m)

print(np.sqrt(m))

#Медиана
a = np.array([100, 80, 75, 77, 89, 33, 45, 25 ,65, 17, 30, 24, 57, 55, 70, 75, 65, 84, 90, 150])
print(z)

print(a.shape) # определяем объем выборки a.shape (чет или нечет)
a.sort()        #сортируем по возрастанию
print(a)

# при четном числе элементов считаем среднеарифмитическое двух средгних элементов 10 и 11, в питоне отсчет с 0
#[ 17  24  25  30  33  45  55  57  65  (65  70)  75  75  77  80  84  89  90 100 150]
print((a[9] + a[10]) / 2)

#Квартили

b = np.array([1, 2, 4, 2, 1, 5, 7, 2, 3, 5, 7, 8, 9])
print(b)
b.sort()
print(b)

#Если n*k/100 = целео число, 
# то k-я персентиль - это среднее значение элементов под номерами
# n*k/100 и n*k/100+1 (если напримеп получили 4, то берем 4 и 5 элементы и среднеарифметическое значение)

#Если n*k/100 не целое число, то k-я персентиль совпадает с измерением j+1, 
# где j - максимальное целое число, которое меньше , чем n*k/100 (если получили дробное чило, берем целую часть + 1)

k = 25 # ищем 25 персентиль
k1 = 75 # будет 10 элемент для 75 персентиль
n = len(b)
print(n) # 13

print(n*k/100) #3.25 - не целое число, идем по второй формуле, 3 мин. целое + 1 = 4 элемент это 25 персентиль = 2, [1 1 2 (2) 2 3 4 5 5 7 7 8 9] или b[3]
print(b[3])
print(b[9]-b[3])